#!/usr/bin/env ruby

###
# I have been running this script straight from textmate, so a few paths are hard-coded here
##

DELIM = "\t"

# 1. Start with ISO-3166-1-numeric

def load_iso_csv(filename)
  table = {}
  File.open(filename).each_line do |line|
    code, name = line.strip.split(DELIM)
    table[name.to_sym] = code.to_sym
  end
  table
end

def load_un_csv(filename, iso_numeric)
  table = {}
  File.open(filename).each_line do |line|
    code, name = line.strip.split(DELIM)
    code = code.to_sym
    name = name.to_sym
    unless iso_numeric.has_value?(code)
      table[name] = code
    end
  end
  table
end

def load_parents
  parent = {}
  `find ../data/un -name '???'`.split("\n").each do |line|
    line = line[/001.*/].split('/').collect{|s|s.to_sym}
    until line.size <= 1
      parent[line.pop] = line.last
    end
  end
  parent
end

iso_numeric   = load_iso_csv('../data/iso/3166-1/numeric.csv')
iso_alpha2    = load_iso_csv('../data/iso/3166-1/alpha-2.csv')
iso_alpha3    = load_iso_csv('../data/iso/3166-1/alpha-3.csv')
un_numeric    = load_un_csv('../data/un/001/World.csv', iso_numeric)
un_parent     = load_parents

names = (iso_numeric.keys + iso_alpha2.keys + iso_alpha3.keys + un_numeric.keys).uniq


data = File.open('../data/all.csv', 'w')
data.puts ["ISO 3166-1 Numeric", "ISO 3166-1 Alpha2", "ISO 3166-1 Alpha3", "Parent", "Name"].join(DELIM)

countries = names.collect do |name|
  numeric = iso_numeric[name] || un_numeric[name]
  alpha2  = iso_alpha2[name]
  alpha3  = iso_alpha3[name]
  parent  = un_parent[numeric]
  [ numeric, alpha2, alpha3, parent, name ]
end.sort { |a,b| a[0].to_s <=> b[0].to_s }

countries.each do |country|
  output = country.join("\t")
  puts output
  data.puts output
end





# iso_numeric.each do |line_3166_numeric|
#   numeric, name = line_3166_numeric.split("\t")
#   alpha2 = iso_alpha2.grep(name)
#   alpha3 = iso_alpha3.grep(name)
#   # alpha2 = `grep "#{name}" ../data/iso/3166-1/alpha-2.txt`.split("\t").first
#   # alpha3 = `grep "#{name}" ../data/iso/3166-1/alpha-3.txt`.split("\t").first
#   parent = `find ../data/un -name '#{numeric}'`
#   unless parent == ""
#     parent = parent.split('/')[-2]
#   end
#   output = [numeric, alpha2, alpha3, parent, name ].join(",")
#   puts output
#   data.puts output
#   exit
# end
#   




# 
# puts "Creating the "
# 
# echo -n "Creating the CSV... "
# mkdir "build"
# CSV="build/all.csv"
# echo 'ISO-3166-1-numeric, ISO-3166-1-alpha2, ISO-3166-1-alpha3, Parent' > $CSV
# echo "done."
# 
# echo -n "Starting with ISO-3166-1-numeric... "
# sed "" data/iso/3166-1/numeric.txt
# echo "done."

# Adding ISO-3166-1-alpha2
# Adding ISO-3166-1-alpha3